CC=g++
WARNS=-Wall -Werror
COPTS=-O2
CDEFS=
CFLAGS=-m32 -c
LDFLAGS=-m32

TARGET=unittest

INCLUDES=-I. \
         -I./src \
         -I./gtest \
         -I/private/share/gtest/include

LIBS=-L/private/share/gtest/lib -lgtest -lgtest_main -lgmock -lgmock_main -lpthread

IGNORE=

SRCS = $(filter-out $(IGNORE),$(wildcard src/*.cpp) $(wildcard gtest/*.cpp))

OBJS=$(addsuffix .o,$(basename $(SRCS)))


### for gcov ###
ifeq ($(gcov),true)
COPTS=-O0
CDEFS+=-DUSE_GCOV
CFLAGS+=-fprofile-arcs -ftest-coverage
LDFLAGS+=-lgcov
endif

### for gdb ###
ifeq ($(gdb),true)
COPTS=-O0
CFLAGS+=-g
endif

CFLAGS+=$(WARNS) $(COPTS) $(CDEFS)
CXXFLAGS=$(CFLAGS)


conf:
	@echo "INCLUDES = " $(INCLUDES)
	@echo "LIBS     = " $(LIBS)
	@echo "SRCS     = " $(SRCS)
	@echo "OBJS     = " $(OBJS)
	@echo "TARGET   = " $(TARGET)
	@echo "CFLAGS   = " $(CFLAGS)
	@echo "LDFLAGS  = " $(LDFLAGS)


.PHONY: all
all: $(TARGET)

$(TARGET): $(OBJS)
	$(CC) $(LDFLAGS) -o $@ $^ $(LIBS)

.PHONY: clean
clean:
	-rm -f $(TARGET) $(OBJS) ./*~ ./src/*~ $(OBJS:.o=.gcno) $(OBJS:.o=.gcda)

.c.o:
	$(CC) $(CFLAGS) $(INCLUDES) -o $@ $<

.cpp.o:
	$(CC) $(CXXFLAGS) $(INCLUDES) -o $@ $<



